import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

from google.colab import drive
drive.mount('/content/drive')
df = pd.read_csv('/content/drive/MyDrive/loan_prediction.csv')
df.head()

print(df.info())
print(df.describe())

print(df.isnull().sum())


df.fillna(df.mode().iloc[0], inplace=True)

sns.countplot(x='Loan_Status', data=df)
plt.title("Loan Approval Status Distribution")
plt.show()

encoder = LabelEncoder()
for col in df.columns:
    if df[col].dtype == 'object':
        df[col] = encoder.fit_transform(df[col])

X = df.drop('Loan_Status', axis=1)
y = df['Loan_Status']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
plt.title("Confusion Matrix")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()

applicant_index = 4  

sample_applicant = X.iloc[applicant_index:applicant_index+1]
print(f"\nApplicant Data (index {applicant_index}):\n")
print(sample_applicant)

prediction = model.predict(sample_applicant)[0]


print("\nPredicted Loan Status:")
if prediction == 1:
    print("Approved")
else:
    print("Rejected")

result_df = sample_applicant.copy()
result_df['Predicted_Loan_Status'] = "Approved" if prediction == 1 else "Rejected"

print("\nApplicant Details with Prediction:")
display(result_df)
